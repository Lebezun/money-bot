import telebot
from telebot import types
from datetime import date, timedelta
import matplotlib.pyplot as plt
import os

from database import *

TOKEN = '8249235733:AAFcyDukXENtAUpH8WPNg6aux8ljiM4zlls'
bot = telebot.TeleBot(TOKEN)

init_db()

def main_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "üìÖ –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ",
        "üìà –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å",
        "üóì –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ –º—ñ—Å—è—Ü—å",
        "üîù –ù–∞–π–±—ñ–ª—å—à–µ –≤–∏—Ç—Ä–∞—Ç",
        "üìä –ì—Ä–∞—Ñ—ñ–∫ –≤–∏—Ç—Ä–∞—Ç",
        "üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏"
    ]
    markup.add(*[types.KeyboardButton(b) for b in buttons])
    return markup

@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –≤–∏—Ç—Ä–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: '–ù–∞–∑–≤–∞ 100'", reply_markup=main_keyboard())

@bot.message_handler(func=lambda msg: msg.text == "üìÖ –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ")
def today_expenses(message):
    total = get_total_by_period(date.today(), date.today())
    bot.send_message(message.chat.id, f"–°—å–æ–≥–æ–¥–Ω—ñ —Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏–≤: {total} –≥—Ä–Ω")

@bot.message_handler(func=lambda msg: msg.text == "üìà –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å")
def week_expenses(message):
    start = date.today() - timedelta(days=7)
    total = get_total_by_period(start, date.today())
    bot.send_message(message.chat.id, f"–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å —Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏–≤: {total} –≥—Ä–Ω")

@bot.message_handler(func=lambda msg: msg.text == "üóì –í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ –º—ñ—Å—è—Ü—å")
def month_expenses(message):
    start = date.today().replace(day=1)
    total = get_total_by_period(start, date.today())
    bot.send_message(message.chat.id, f"–¶—å–æ–≥–æ –º—ñ—Å—è—Ü—è —Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏–≤: {total} –≥—Ä–Ω")

@bot.message_handler(func=lambda msg: msg.text == "üîù –ù–∞–π–±—ñ–ª—å—à–µ –≤–∏—Ç—Ä–∞—Ç")
def top_expense(message):
    category, amount = get_biggest_category()
    bot.send_message(message.chat.id, f"üîù –ù–∞–π–±—ñ–ª—å—à–µ —Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏–≤ –Ω–∞: {category} ‚Äî {amount} –≥—Ä–Ω")

@bot.message_handler(func=lambda msg: msg.text == "üìä –ì—Ä–∞—Ñ—ñ–∫ –≤–∏—Ç—Ä–∞—Ç")
def plot_expenses(message):
    data = get_today_expenses_grouped()
    if not data:
        bot.send_message(message.chat.id, "–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ç—Ä–∞—Ç —â–µ –Ω–µ –±—É–ª–æ.")
        return
    categories, amounts = zip(*data)
    plt.figure(figsize=(8, 6))
    plt.pie(amounts, labels=categories, autopct='%1.1f%%')
    plt.title('–°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏')
    plt.savefig("chart.png")
    plt.close()
    with open("chart.png", 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    os.remove("chart.png")

@bot.message_handler(func=lambda msg: msg.text == "üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏")
def clear_today(message):
    clear_today_expenses()
    bot.send_message(message.chat.id, "–í–∏—Ç—Ä–∞—Ç–∏ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –æ—á–∏—â–µ–Ω–æ ‚úÖ")

@bot.message_handler(func=lambda msg: True)
def add_expense_handler(message):
    try:
        parts = message.text.rsplit(" ", 1)
        category, amount = parts[0], int(parts[1])
        add_expense(category, amount)
        bot.send_message(message.chat.id, f"–î–æ–¥–∞–Ω–æ: {category} ‚Äî {amount} –≥—Ä–Ω")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ü—ñ—Ü–∞ 150")

bot.infinity_polling()
